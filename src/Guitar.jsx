import { useRef, useEffect, useState } from 'react' 
import { useFrame } from '@react-three/fiber'
import { Text, OrbitControls, useGLTF, useTexture } from '@react-three/drei'
import * as THREE from 'three'
import useVariant from './stores/useVariant.jsx'
import MeshFresnelMaterial from './components/MeshFresnelMaterial.jsx'
// import createTranslucentMaterial from './components/TranslucentMaterial.jsx'
import SSSMaterial from './components/SubSurfaceMaterial.jsx'

const asset_name = 'prpGuitar'

export function Guitar(props) {
  const { nodes, materials } = useGLTF(`./assets/${asset_name}/model.glb`)

  const body = useVariant((state) => state.body);
  const headstock = useVariant((state) => state.headstock);
  const headstock2 = useVariant((state) => state.headstock2);
  const inlay = useVariant((state) => state.inlay);
  const inlay2 = useVariant((state) => state.inlay2);
  const starPowerButton = useVariant((state) => state.starPowerButton);
  const bodyColor = useVariant((state) => state.bodyColor);
  const arcadeButtonColor = useVariant((state) => state.arcadeButtonColor);
  const neckButtonColor = useVariant((state) => state.neckButtonColor);
  const neckColor = useVariant((state) => state.neckColor);
  const inlayColor = useVariant((state) => state.inlayColor);
  const fretBoardColor = useVariant((state) => state.fretBoardColor);
  const fretBoardBindingColor = useVariant((state) => state.fretBoardBindingColor);
  const pickGuardColor = useVariant((state) => state.pickGuardColor);
  const hardwareColor = useVariant((state) => state.hardwareColor);
  const strummerOffset = useVariant((state) => state.strummerOffset);
  const isDualNeck = useVariant((state) => state.isDualNeck);
  const dualNeckOffsetPos = useVariant((state) => state.dualNeckOffsetPos);
  const dualNeckOffsetRot = useVariant((state) => state.dualNeckOffsetRot);

  // Define material library
  const m_blackPlastic = new THREE.MeshStandardMaterial({color: "black", roughness: 0.3})
  const m_redPlastic = new THREE.MeshStandardMaterial({color: "#ce1c1c", roughness: 0.2})
  const m_greenPlastic = new THREE.MeshStandardMaterial({color: "#56aa0e", roughness: 0.3})
  const m_yellowPlastic = new THREE.MeshStandardMaterial({color: "#ebab09", roughness: 0.3})
  const m_bluePlastic = new THREE.MeshStandardMaterial({color: "#3f1cb1", roughness: 0.3})
  const m_orangePlastic = new THREE.MeshStandardMaterial({color: '#f25530', roughness: 0.3})
  const m_whitePlastic = new THREE.MeshStandardMaterial({color: "white", roughness: 0.3})
  const m_brushedMetal = new THREE.MeshStandardMaterial({color: "grey", roughness: 0.5, metalness: 0.5})
  const m_hardwareMetal = new THREE.MeshStandardMaterial({color: hardwareColor, roughness: 0.2, metalness: 1})
  const m_chromeMetal = new THREE.MeshStandardMaterial({color: "white", roughness: 0.1, metalness: 1})
  const m_bodyPlastic = new THREE.MeshStandardMaterial({color: bodyColor, roughness: 0.4, metalness: 0})
  const m_arcadeButtonPlastic = new THREE.MeshStandardMaterial({color: arcadeButtonColor, roughness: 0.4, metalness: 0})
  const m_neckButtonPlastic = new THREE.MeshStandardMaterial({color: neckButtonColor, roughness: 0.4, metalness: 0})
  const m_inlayPlastic = new THREE.MeshStandardMaterial({color: inlayColor, roughness: 0.4, metalness: 0})
  const m_neckPlastic = new THREE.MeshStandardMaterial({color: neckColor, roughness: 0.4, metalness: 0})
  const m_fretboardBindingPlastic = new THREE.MeshStandardMaterial({color: fretBoardBindingColor, roughness: 0.4, metalness: 0})
  const m_fretBoardWood = new THREE.MeshStandardMaterial({color: fretBoardColor, roughness: 0.8, metalness: 0})
  const m_pickGuardPlastic = new THREE.MeshStandardMaterial({color: pickGuardColor, roughness: 0.4, metalness: 0})
  const m_translucentPlastic = SSSMaterial()

  // Create a mapping between material names and material objects
  const materialMapping = {
    '__blackPlastic__': m_blackPlastic,
    '__redPlastic__': m_redPlastic,
    '__greenPlastic__': m_greenPlastic,
    '__yellowPlastic__': m_yellowPlastic,
    '__bluePlastic__': m_bluePlastic,
    '__orangePlastic__': m_orangePlastic,
    '__whitePlastic__': m_whitePlastic,
    '__neckButtonPlastic__': m_neckButtonPlastic,
    '__brushedMetal__': m_brushedMetal,
    '__hardwareMetal__': m_hardwareMetal,
    '__chromeMetal__': m_chromeMetal,
    '__bodyPlastic__': m_bodyPlastic,
    '__buttonPlastic__': m_arcadeButtonPlastic,
    '__neckPlastic__': m_neckPlastic,
    '__inlayPlastic__': m_inlayPlastic,
    '__fretBoardBindingPlastic__': m_fretboardBindingPlastic,
    '__fretBoardWood__': m_fretBoardWood,
    '__pickGuardPlastic__': m_pickGuardPlastic,
    '__translucentPlastic__': m_translucentPlastic,
  }

  // Assign materials to geometries based on their names
  Object.keys(nodes).forEach(key => {
    Object.keys(materialMapping).forEach(materialKey => {
      if (key.includes(materialKey)) {
        nodes[key].material = materialMapping[materialKey]
      }
    })
  })

  return (
    <group {...props} dispose={null}>
      {/* Add point light for subsurface scattering effect */}
      <pointLight 
        position={[0, 2.5, 0]} 
        intensity={0.05} 
        color="#00a6ed" 
      />
      <pointLight 
        position={[0, 2.8, 0]} 
        intensity={0.05} 
        color="#00a6ed" 
      />
      <pointLight 
        position={[0, 2.2, 0]} 
        intensity={0.05} 
        color="#00a6ed" 
      />
      <ambientLight intensity={0.1} />
      <group visible={body === "body_arrow"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_arrow_back__bodyPlastic__geo.geometry}
          material={nodes.body_arrow_back__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_arrow_buttonA__buttonPlastic__geo.geometry}
          material={nodes.body_arrow_buttonA__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_arrow_buttonB__buttonPlastic__geo.geometry}
          material={nodes.body_arrow_buttonB__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_arrow_buttonSP__buttonPlastic__geo.geometry}
          material={nodes.body_arrow_buttonSP__buttonPlastic__geo.material}
          visible={starPowerButton}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_arrow_front__bodyPlastic__geo.geometry}
          material={nodes.body_arrow_front__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_arrow_mmPivot__buttonPlastic__geo.geometry}
          material={nodes.body_arrow_mmPivot__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_arrow_pickGuard__pickGuardPlastic__geo.geometry}
          material={nodes.body_arrow_pickGuard__pickGuardPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_arrow_strapMount__blackPlastic__geo.geometry}
          material={nodes.body_arrow_strapMount__blackPlastic__geo.material}
        />
      </group>
      <group visible={body === "body_aviator"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_aviator_back__bodyPlastic__geo.geometry}
          material={nodes.body_aviator_back__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_aviator_buttonA__buttonPlastic__geo.geometry}
          material={nodes.body_aviator_buttonA__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_aviator_buttonB__buttonPlastic__geo.geometry}
          material={nodes.body_aviator_buttonB__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_aviator_buttonSP__buttonPlastic__geo.geometry}
          material={nodes.body_aviator_buttonSP__buttonPlastic__geo.material}
          visible={starPowerButton}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_aviator_details__blackMattePlastic__geo.geometry}
          material={nodes.body_aviator_details__blackMattePlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_aviator_front__bodyPlastic__geo.geometry}
          material={nodes.body_aviator_front__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_aviator_mmPivot__blackPlastic__geo.geometry}
          material={nodes.body_aviator_mmPivot__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_aviator_pegs__hardwareMetal__geo.geometry}
          material={nodes.body_aviator_pegs__hardwareMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_aviator_strapMount__blackPlastic__geo.geometry}
          material={nodes.body_aviator_strapMount__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_aviator_strummer_insertA__strummerPlastic__geo.geometry}
          material={nodes.body_aviator_strummer_insertA__strummerPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_aviator_strummer_insertB__strummerPlastic__geo.geometry}
          material={nodes.body_aviator_strummer_insertB__strummerPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_aviator_strummer_main__translucentPlastic__geo.geometry}
          material={nodes.body_aviator_strummer_main__translucentPlastic__geo.material}
        />
      </group>
      <group visible={body === "body_briefcase"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_briefcase_back__bodyPlastic__geo.geometry}
          material={nodes.body_briefcase_back__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_briefcase_buttonA__buttonPlastic__geo.geometry}
          material={nodes.body_briefcase_buttonA__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_briefcase_buttonB__buttonPlastic__geo.geometry}
          material={nodes.body_briefcase_buttonB__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_briefcase_buttonSP__buttonPlastic__geo.geometry}
          material={nodes.body_briefcase_buttonSP__buttonPlastic__geo.material}
          visible={starPowerButton}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_briefcase_front__bodyPlastic__geo.geometry}
          material={nodes.body_briefcase_front__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_briefcase_mmPivot__blackPlastic__geo.geometry}
          material={nodes.body_briefcase_mmPivot__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_briefcase_pickGuard__pickGuardPlastic__geo.geometry}
          material={nodes.body_briefcase_pickGuard__pickGuardPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_briefcase_strapMount__blackPlastic__geo.geometry}
          material={nodes.body_briefcase_strapMount__blackPlastic__geo.material}
        />
      </group>
      <group visible={body === "body_broadcaster"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_broadcaster_back__bodyPlastic__geo.geometry}
          material={nodes.body_broadcaster_back__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_broadcaster_buttonA__buttonPlastic__geo.geometry}
          material={nodes.body_broadcaster_buttonA__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_broadcaster_buttonB__buttonPlastic__geo.geometry}
          material={nodes.body_broadcaster_buttonB__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_broadcaster_buttonSP__buttonPlastic__geo.geometry}
          material={nodes.body_broadcaster_buttonSP__buttonPlastic__geo.material}
          visible={starPowerButton}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_broadcaster_buttonTrim__greyPlastic__geo.geometry}
          material={nodes.body_broadcaster_buttonTrim__greyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_broadcaster_front__bodyPlastic__geo.geometry}
          material={nodes.body_broadcaster_front__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_broadcaster_mmPivot__blackPlastic__geo.geometry}
          material={nodes.body_broadcaster_mmPivot__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_broadcaster_pickGuard__pickGuardPlastic__geo.geometry}
          material={nodes.body_broadcaster_pickGuard__pickGuardPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_broadcaster_strapMount__blackPlastic__geo.geometry}
          material={nodes.body_broadcaster_strapMount__blackPlastic__geo.material}
        />
      </group>
      <group visible={body === "body_fallenangel"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_fallenangel_back__bodyPlastic__geo.geometry}
          material={nodes.body_fallenangel_back__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_fallenangel_buttonA__buttonPlastic__geo.geometry}
          material={nodes.body_fallenangel_buttonA__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_fallenangel_buttonB__buttonPlastic__geo.geometry}
          material={nodes.body_fallenangel_buttonB__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_fallenangel_buttonSP__buttonPlastic__geo.geometry}
          material={nodes.body_fallenangel_buttonSP__buttonPlastic__geo.material}
          visible={starPowerButton}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_fallenangel_detail__whitePlastic__geo.geometry}
          material={nodes.body_fallenangel_detail__whitePlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_fallenangel_front__bodyPlastic__geo.geometry}
          material={nodes.body_fallenangel_front__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_fallenangel_mmPivot__blackPlastic__geo.geometry}
          material={nodes.body_fallenangel_mmPivot__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_fallenangel_strapMount__blackPlastic__geo.geometry}
          material={nodes.body_fallenangel_strapMount__blackPlastic__geo.material}
        />
      </group>
      <group visible={body === "body_hammer"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_hammer_back__bodyPlastic__geo.geometry}
          material={nodes.body_hammer_back__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_hammer_bridge__hardwareMetal__geo.geometry}
          material={nodes.body_hammer_bridge__hardwareMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_hammer_buttonA__buttonPlastic__geo.geometry}
          material={nodes.body_hammer_buttonA__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_hammer_buttonB__buttonPlastic__geo.geometry}
          material={nodes.body_hammer_buttonB__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_hammer_buttonSP__buttonPlastic__geo.geometry}
          material={nodes.body_hammer_buttonSP__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_hammer_front__bodyPlastic__geo.geometry}
          material={nodes.body_hammer_front__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_hammer_mmPivot__blackPlastic__geo.geometry}
          material={nodes.body_hammer_mmPivot__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_hammer_pickGuard__pickGuardPlastic__geo.geometry}
          material={nodes.body_hammer_pickGuard__pickGuardPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_hammer_strapMount__blackPlastic__geo.geometry}
          material={nodes.body_hammer_strapMount__blackPlastic__geo.material}
        />
      </group>
      <group visible={body === "body_headless"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_headless_back__bodyPlastic__geo.geometry}
          material={nodes.body_headless_back__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_headless_buttonA__buttonPlastic__geo.geometry}
          material={nodes.body_headless_buttonA__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_headless_buttonB__buttonPlastic__geo.geometry}
          material={nodes.body_headless_buttonB__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_headless_buttonSP__buttonPlastic__geo.geometry}
          material={nodes.body_headless_buttonSP__buttonPlastic__geo.material}
          visible={starPowerButton}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_headless_front__bodyPlastic__geo.geometry}
          material={nodes.body_headless_front__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_headless_mmPivot__blackPlastic__geo.geometry}
          material={nodes.body_headless_mmPivot__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_headless_pickGuard__pickGuardPlastic__geo.geometry}
          material={nodes.body_headless_pickGuard__pickGuardPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_headless_strapMount__blackPlastic__geo.geometry}
          material={nodes.body_headless_strapMount__blackPlastic__geo.material}
        />
      </group>
      <group visible={body === "body_jazzy"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_jazzy_back__bodyPlastic__geo.geometry}
          material={nodes.body_jazzy_back__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_jazzy_bridge__hardwareMetal__geo.geometry}
          material={nodes.body_jazzy_bridge__hardwareMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_jazzy_buttonA__buttonPlastic__geo.geometry}
          material={nodes.body_jazzy_buttonA__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_jazzy_buttonB__buttonPlastic__geo.geometry}
          material={nodes.body_jazzy_buttonB__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_jazzy_buttonSP__buttonPlastic__geo.geometry}
          material={nodes.body_jazzy_buttonSP__buttonPlastic__geo.material}
          visible={starPowerButton}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_jazzy_front__bodyPlastic__geo.geometry}
          material={nodes.body_jazzy_front__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_jazzy_mmPivot__blackPlastic__geo.geometry}
          material={nodes.body_jazzy_mmPivot__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_jazzy_pickGuard__pickGuardPlastic__geo.geometry}
          material={nodes.body_jazzy_pickGuard__pickGuardPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_jazzy_strapMount__blackPlastic__geo.geometry}
          material={nodes.body_jazzy_strapMount__blackPlastic__geo.material}
        />
      </group>
      <group visible={body === "body_plankspanker"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_plankspanker_back__bodyPlastic__geo.geometry}
          material={nodes.body_plankspanker_back__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_plankspanker_bridge__hardwareMetal__geo.geometry}
          material={nodes.body_plankspanker_bridge__hardwareMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_plankspanker_buttonA__buttonPlastic__geo.geometry}
          material={nodes.body_plankspanker_buttonA__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_plankspanker_buttonB__buttonPlastic__geo.geometry}
          material={nodes.body_plankspanker_buttonB__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_plankspanker_buttonSP__buttonPlastic__geo.geometry}
          material={nodes.body_plankspanker_buttonSP__buttonPlastic__geo.material}
          visible={starPowerButton}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_plankspanker_detail__blackPlastic__geo.geometry}
          material={nodes.body_plankspanker_detail__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_plankspanker_front__bodyPlastic__geo.geometry}
          material={nodes.body_plankspanker_front__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_plankspanker_mmPivot__blackPlastic__geo.geometry}
          material={nodes.body_plankspanker_mmPivot__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_plankspanker_pickGuard__pickGuardPlastic__geo.geometry}
          material={nodes.body_plankspanker_pickGuard__pickGuardPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_plankspanker_strapMount__blackPlastic__geo.geometry}
          material={nodes.body_plankspanker_strapMount__blackPlastic__geo.material}
        />
      </group>
      <group visible={body === "body_reliable"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_reliable_back__bodyPlastic__geo.geometry}
          material={nodes.body_reliable_back__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_reliable_bridge__hardwareMetal__geo.geometry}
          material={nodes.body_reliable_bridge__hardwareMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_reliable_buttonA__buttonPlastic__geo.geometry}
          material={nodes.body_reliable_buttonA__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_reliable_buttonB__buttonPlastic__geo.geometry}
          material={nodes.body_reliable_buttonB__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_reliable_buttonSP__buttonPlastic__geo.geometry}
          material={nodes.body_reliable_buttonSP__buttonPlastic__geo.material}
          visible={starPowerButton}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_reliable_front__bodyPlastic__geo.geometry}
          material={nodes.body_reliable_front__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_reliable_mmPivot__blackPlastic__geo.geometry}
          material={nodes.body_reliable_mmPivot__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_reliable_pickGuard__pickGuardPlastic__geo.geometry}
          material={nodes.body_reliable_pickGuard__pickGuardPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_reliable_strapMount__blackPlastic__geo.geometry}
          material={nodes.body_reliable_strapMount__blackPlastic__geo.material}
        />
      </group>
      <group visible={body === "body_shredhammer"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_shredhammer_back__bodyPlastic__geo.geometry}
          material={nodes.body_shredhammer_back__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_shredhammer_bridge__hardwareMetal__geo.geometry}
          material={nodes.body_shredhammer_bridge__hardwareMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_shredhammer_buttonA__buttonPlastic__geo.geometry}
          material={nodes.body_shredhammer_buttonA__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_shredhammer_buttonB__buttonPlastic__geo.geometry}
          material={nodes.body_shredhammer_buttonB__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_shredhammer_buttonSP__buttonPlastic__geo.geometry}
          material={nodes.body_shredhammer_buttonSP__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_shredhammer_detail__blackMattePlastic__geo.geometry}
          material={nodes.body_shredhammer_detail__blackMattePlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_shredhammer_front__bodyPlastic__geo.geometry}
          material={nodes.body_shredhammer_front__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_shredhammer_mmPivot__blackPlastic__geo.geometry}
          material={nodes.body_shredhammer_mmPivot__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_shredhammer_strapMount__blackPlastic__geo.geometry}
          material={nodes.body_shredhammer_strapMount__blackPlastic__geo.material}
        />
      </group>
      <group visible={body === "body_summit"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_summit_back__bodyPlastic__geo.geometry}
          material={nodes.body_summit_back__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_summit_buttonA__buttonPlastic__geo.geometry}
          material={nodes.body_summit_buttonA__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_summit_buttonB__buttonPlastic__geo.geometry}
          material={nodes.body_summit_buttonB__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_summit_buttonSP__buttonPlastic__geo.geometry}
          material={nodes.body_summit_buttonSP__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_summit_front__bodyPlastic__geo.geometry}
          material={nodes.body_summit_front__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_summit_mmPivot__blackPlastic__geo.geometry}
          material={nodes.body_summit_mmPivot__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_summit_strapMount__blackPlastic__geo.geometry}
          material={nodes.body_summit_strapMount__blackPlastic__geo.material}
        />
      </group>
      <group visible={body === "body_thunderbird"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_thunderbird_back__bodyPlastic__geo.geometry}
          material={nodes.body_thunderbird_back__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_thunderbird_buttonA__buttonPlastic__geo.geometry}
          material={nodes.body_thunderbird_buttonA__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_thunderbird_buttonB__buttonPlastic__geo.geometry}
          material={nodes.body_thunderbird_buttonB__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_thunderbird_buttonSP__buttonPlastic__geo.geometry}
          material={nodes.body_thunderbird_buttonSP__buttonPlastic__geo.material}
          visible={starPowerButton}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_thunderbird_detail__basePlastic__geo.geometry}
          material={nodes.body_thunderbird_detail__basePlastic__geo.material}
          visible={false}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_thunderbird_detail__whitePlastic__geo.geometry}
          material={nodes.body_thunderbird_detail__whitePlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_thunderbird_front__bodyPlastic__geo.geometry}
          material={nodes.body_thunderbird_front__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_thunderbird_mmPivot__blackPlastic__geo.geometry}
          material={nodes.body_thunderbird_mmPivot__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_thunderbird_strapMount__blackPlastic__geo.geometry}
          material={nodes.body_thunderbird_strapMount__blackPlastic__geo.material}
        />
      </group>
      <group visible={body === "body_viper"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_viper_back__bodyPlastic__geo.geometry}
          material={nodes.body_viper_back__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_viper_buttonA__buttonPlastic__geo.geometry}
          material={nodes.body_viper_buttonA__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_viper_buttonB__buttonPlastic__geo.geometry}
          material={nodes.body_viper_buttonB__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_viper_buttonSP__buttonPlastic__geo.geometry}
          material={nodes.body_viper_buttonSP__buttonPlastic__geo.material}
          visible={starPowerButton}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_viper_front__bodyPlastic__geo.geometry}
          material={nodes.body_viper_front__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_viper_mmPivot__blackPlastic__geo.geometry}
          material={nodes.body_viper_mmPivot__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_viper_strapMount__blackPlastic__geo.geometry}
          material={nodes.body_viper_strapMount__blackPlastic__geo.material}
        />
      </group>
      <group visible={body === "body_youngster"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_youngster_back__bodyPlastic__geo.geometry}
          material={nodes.body_youngster_back__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_youngster_bridge__hardwareMetal__geo.geometry}
          material={nodes.body_youngster_bridge__hardwareMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_youngster_buttonA__buttonPlastic__geo.geometry}
          material={nodes.body_youngster_buttonA__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_youngster_buttonB__buttonPlastic__geo.geometry}
          material={nodes.body_youngster_buttonB__buttonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_youngster_buttonSP__buttonPlastic__geo.geometry}
          material={nodes.body_youngster_buttonSP__buttonPlastic__geo.material}
          visible={starPowerButton}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_youngster_front__bodyPlastic__geo.geometry}
          material={nodes.body_youngster_front__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_youngster_mmPivot__blackPlastic__geo.geometry}
          material={nodes.body_youngster_mmPivot__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_youngster_pickGuard__pickGuardPlastic__geo.geometry}
          material={nodes.body_youngster_pickGuard__pickGuardPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.body_youngster_strapMount__blackPlastic__geo.geometry}
          material={nodes.body_youngster_strapMount__blackPlastic__geo.material}
        />
      </group>
      <group visible={headstock === "headstock_arrow"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_arrow_back__neckPlastic__geo.geometry}
          material={nodes.headstock_arrow_back__neckPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_arrow_detail__bodyPlastic__geo.geometry}
          material={nodes.headstock_arrow_detail__bodyPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_arrow_front__blackPlastic__geo.geometry}
          material={nodes.headstock_arrow_front__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_arrow_pegs__hardwareMetal__geo.geometry}
          material={nodes.headstock_arrow_pegs__hardwareMetal__geo.material}
        />
      </group>
      <group visible={headstock === "headstock_aviator"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_aviator_back__neckPlastic__geo.geometry}
          material={nodes.headstock_aviator_back__neckPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_aviator_pegs__hardwareMetal__geo.geometry}
          material={nodes.headstock_aviator_pegs__hardwareMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_aviator_trussRoadCover__blackPlastic__geo.geometry}
          material={nodes.headstock_aviator_trussRoadCover__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_aviator_trussRoadCoverTrim__whitePlastic__geo.geometry}
          material={nodes.headstock_aviator_trussRoadCoverTrim__whitePlastic__geo.material}
        />
      </group>
      <group visible={headstock === "headstock_briefcase"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_briefcase_back__neckPlastic__geo.geometry}
          material={nodes.headstock_briefcase_back__neckPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_briefcase_front__blackPlastic__geo.geometry}
          material={nodes.headstock_briefcase_front__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_briefcase_pegs__hardwareMetal__geo.geometry}
          material={nodes.headstock_briefcase_pegs__hardwareMetal__geo.material}
        />
      </group>
      <group visible={headstock === "headstock_broadcaster"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_broadcaster_back__neckPlastic__geo.geometry}
          material={nodes.headstock_broadcaster_back__neckPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_broadcaster_pegs__hardwareMetal__geo.geometry}
          material={nodes.headstock_broadcaster_pegs__hardwareMetal__geo.material}
        />
      </group>
      <group visible={headstock === "headstock_fallenangel"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_fallenangel_back__neckPlastic__geo.geometry}
          material={nodes.headstock_fallenangel_back__neckPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_fallenangel_detail__whitePlastic__geo.geometry}
          material={nodes.headstock_fallenangel_detail__whitePlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_fallenangel_pegs__hardwareMetal__geo.geometry}
          material={nodes.headstock_fallenangel_pegs__hardwareMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_fallenangel_trussRoadCover__blackPlastic__geo.geometry}
          material={nodes.headstock_fallenangel_trussRoadCover__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_fallenangel_trussRoadCoverTrim__whitePlastic__geo.geometry}
          material={nodes.headstock_fallenangel_trussRoadCoverTrim__whitePlastic__geo.material}
        />
      </group>
      <group visible={headstock === "headstock_headless"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_headless_back__neckPlastic__geo.geometry}
          material={nodes.headstock_headless_back__neckPlastic__geo.material}
        />
      </group>
      <group visible={headstock === "headstock_ninjastar"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_ninjastar_back__neckPlastic__geo.geometry}
          material={nodes.headstock_ninjastar_back__neckPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_ninjastar_front__blackPlastic__geo.geometry}
          material={nodes.headstock_ninjastar_front__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_ninjastar_pegs__hardwareMetal__geo.geometry}
          material={nodes.headstock_ninjastar_pegs__hardwareMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_ninjastar_trussRoadCover__blackPlastic__geo.geometry}
          material={nodes.headstock_ninjastar_trussRoadCover__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_ninjastar_trussRoadCoverTrim__whitePlastic__geo.geometry}
          material={nodes.headstock_ninjastar_trussRoadCoverTrim__whitePlastic__geo.material}
        />
      </group>
      <group visible={headstock === "headstock_oversized"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_oversized_back__neckPlastic__geo.geometry}
          material={nodes.headstock_oversized_back__neckPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_oversized_pegs__hardwareMetal__geo.geometry}
          material={nodes.headstock_oversized_pegs__hardwareMetal__geo.material}
        />
      </group>
      <group visible={headstock === "headstock_plankspanker"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_plankspanker_back__neckPlastic__geo.geometry}
          material={nodes.headstock_plankspanker_back__neckPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_plankspanker_detail__whitePlastic__geo.geometry}
          material={nodes.headstock_plankspanker_detail__whitePlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_plankspanker_front__blackPlastic__geo.geometry}
          material={nodes.headstock_plankspanker_front__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_plankspanker_pegs__hardwareMetal__geo.geometry}
          material={nodes.headstock_plankspanker_pegs__hardwareMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_plankspanker_trussRoadCover__blackPlastic__geo.geometry}
          material={nodes.headstock_plankspanker_trussRoadCover__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_plankspanker_trussRoadCoverTrim__whitePlastic__geo.geometry}
          material={nodes.headstock_plankspanker_trussRoadCoverTrim__whitePlastic__geo.material}
        />
      </group>
      <group visible={headstock === "headstock_reliable"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_reliable_back__neckPlastic__geo.geometry}
          material={nodes.headstock_reliable_back__neckPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_reliable_front__blackPlastic__geo.geometry}
          material={nodes.headstock_reliable_front__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_reliable_pegs__hardwareMetal__geo.geometry}
          material={nodes.headstock_reliable_pegs__hardwareMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_reliable_trussRoadCover__blackPlastic__geo.geometry}
          material={nodes.headstock_reliable_trussRoadCover__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_reliable_trussRoadCoverTrim__whitePlastic__geo.geometry}
          material={nodes.headstock_reliable_trussRoadCoverTrim__whitePlastic__geo.material}
        />
      </group>
      <group visible={headstock === "headstock_reliable12"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_reliable12_back__neckPlastic__geo.geometry}
          material={nodes.headstock_reliable12_back__neckPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_reliable12_front__blackPlastic__geo.geometry}
          material={nodes.headstock_reliable12_front__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_reliable12_pegs__hardwareMetal__geo.geometry}
          material={nodes.headstock_reliable12_pegs__hardwareMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_reliable12_trussRoadCover__blackPlastic__geo.geometry}
          material={nodes.headstock_reliable12_trussRoadCover__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_reliable12_trussRoadCoverTrim__whitePlastic__geo.geometry}
          material={nodes.headstock_reliable12_trussRoadCoverTrim__whitePlastic__geo.material}
        />
      </group>
      <group visible={headstock === "headstock_summit"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_summit_back__neckPlastic__geo.geometry}
          material={nodes.headstock_summit_back__neckPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_summit_front__blackPlastic__geo.geometry}
          material={nodes.headstock_summit_front__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_summit_pegs__hardwareMetal__geo.geometry}
          material={nodes.headstock_summit_pegs__hardwareMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_summit_trussRoadCover__blackPlastic__geo.geometry}
          material={nodes.headstock_summit_trussRoadCover__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_summit_trussRoadCoverTrim__whitePlastic__geo.geometry}
          material={nodes.headstock_summit_trussRoadCoverTrim__whitePlastic__geo.material}
        />
      </group>
      <group visible={headstock === "headstock_thunderbird"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_thunderbird_back__neckPlastic__geo.geometry}
          material={nodes.headstock_thunderbird_back__neckPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_thunderbird_detail__whitePlastic__geo.geometry}
          material={nodes.headstock_thunderbird_detail__whitePlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_thunderbird_front__blackPlastic__geo.geometry}
          material={nodes.headstock_thunderbird_front__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_thunderbird_pegs__hardwareMetal__geo.geometry}
          material={nodes.headstock_thunderbird_pegs__hardwareMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_thunderbird_trussRoadCover__blackPlastic__geo.geometry}
          material={nodes.headstock_thunderbird_trussRoadCover__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_thunderbird_trussRoadCoverTrim__whitePlastic__geo.geometry}
          material={nodes.headstock_thunderbird_trussRoadCoverTrim__whitePlastic__geo.material}
        />
      </group>
      <group visible={headstock === "headstock_viper"}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_viper_back__neckPlastic__geo.geometry}
          material={nodes.headstock_viper_back__neckPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_viper_detail__whitePlastic__geo.geometry}
          material={nodes.headstock_viper_detail__whitePlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_viper_front__blackPlastic__geo.geometry}
          material={nodes.headstock_viper_front__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.headstock_viper_pegs__hardwareMetal__geo.geometry}
          material={nodes.headstock_viper_pegs__hardwareMetal__geo.material}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.inlay_bird__inlayPlastic__geo.geometry}
        material={nodes.inlay_bird__inlayPlastic__geo.material}
        visible={inlay === 'inlay_bird'}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.inlay_block__inlayPlastic__geo.geometry}
        material={nodes.inlay_block__inlayPlastic__geo.material}
        visible={inlay === 'inlay_block'}
      />
        <mesh
        castShadow
        receiveShadow
        geometry={nodes.inlay_cloud__inlayPlastic__geo.geometry}
        material={nodes.inlay_cloud__inlayPlastic__geo.material}
        visible={inlay === 'inlay_cloud'}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.inlay_classicDot__inlayPlastic__geo.geometry}
        material={nodes.inlay_classicDot__inlayPlastic__geo.material}
        visible={inlay === 'inlay_classicDot'}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.inlay_deathbat__inlayPlastic__geo.geometry}
        material={nodes.inlay_deathbat__inlayPlastic__geo.material}
        visible={inlay === 'inlay_deathbat'}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.inlay_lightning__inlayPlastic__geo.geometry}
        material={nodes.inlay_lightning__inlayPlastic__geo.material}
        visible={inlay === 'inlay_lightning'}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.inlay_offsetDot__inlayPlastic__geo.geometry}
        material={nodes.inlay_offsetDot__inlayPlastic__geo.material}
        visible={inlay === 'inlay_offsetDot'}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.inlay_parallelogram__inlayPlastic__geo.geometry}
        material={nodes.inlay_parallelogram__inlayPlastic__geo.material}
        visible={inlay === 'inlay_parallelogram'}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.inlay_razor__inlayPlastic__geo.geometry}
        material={nodes.inlay_razor__inlayPlastic__geo.material}
        visible={inlay === 'inlay_razor'}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.inlay_sharkfin__inlayPlastic__geo.geometry}
        material={nodes.inlay_sharkfin__inlayPlastic__geo.material}
        visible={inlay === 'inlay_sharkfin'}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.inlay_snake__inlayPlastic__geo.geometry}
        material={nodes.inlay_snake__inlayPlastic__geo.material}
        visible={inlay === 'inlay_snake'}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.inlay_trapezoid__inlayPlastic__geo.geometry}
        material={nodes.inlay_trapezoid__inlayPlastic__geo.material}
        visible={inlay === 'inlay_trapezoid'}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.inlay_tree__inlayPlastic__geo.geometry}
        material={nodes.inlay_tree__inlayPlastic__geo.material}
        visible={inlay === 'inlay_tree'}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.logo_plate__chromeMetal__geo.geometry}
        material={nodes.logo_plate__chromeMetal__geo.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.logo_text___blackPlastic__geo.geometry}
        material={nodes.logo_text___blackPlastic__geo.material}
      />
      <group>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_back__neckPlastic__geo.geometry}
          material={nodes.neck_back__neckPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_buttonA__neckButtonPlastic__geo.geometry}
          material={nodes.neck_buttonA__neckButtonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_buttonB__neckButtonPlastic__geo.geometry}
          material={nodes.neck_buttonB__neckButtonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_buttonC__neckButtonPlastic__geo.geometry}
          material={nodes.neck_buttonC__neckButtonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_buttonD__neckButtonPlastic__geo.geometry}
          material={nodes.neck_buttonD__neckButtonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_buttonE__neckButtonPlastic__geo.geometry}
          material={nodes.neck_buttonE__neckButtonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_buttonTrim__translucentPlastic__geo.geometry}
          material={nodes.neck_buttonTrim__translucentPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_fretboard__fretBoardWood__geo.geometry}
          material={nodes.neck_fretboard__fretBoardWood__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_frets__brushedMetal__geo.geometry}
          material={nodes.neck_frets__brushedMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_polybar__fretboardBindingPlastic__geo.geometry}
          material={m_fretboardBindingPlastic}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_riviet1__bluePlastic__geo.geometry}
          material={nodes.neck_riviet1__bluePlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_riviet2__redPlastic__geo.geometry}
          material={nodes.neck_riviet2__redPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_riviet3__yellowPlastic__geo.geometry}
          material={nodes.neck_riviet3__yellowPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_riviet4__bluePlastic__geo.geometry}
          material={nodes.neck_riviet4__bluePlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_riviet5__orangePlastic__geo.geometry}
          material={nodes.neck_riviet5__orangePlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_riviets__blackPlastic__geo.geometry}
          material={nodes.neck_riviets__blackPlastic__geo.material}
        />
      </group>
      <group name='dualNeck' visible={isDualNeck} position={dualNeckOffsetPos} rotation={dualNeckOffsetRot}>
        <group visible={headstock2 === "headstock_arrow"}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_arrow_back__neckPlastic__geo.geometry}
            material={nodes.headstock_arrow_back__neckPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_arrow_detail__bodyPlastic__geo.geometry}
            material={nodes.headstock_arrow_detail__bodyPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_arrow_front__blackPlastic__geo.geometry}
            material={nodes.headstock_arrow_front__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_arrow_pegs__hardwareMetal__geo.geometry}
            material={nodes.headstock_arrow_pegs__hardwareMetal__geo.material}
          />
        </group>
        <group visible={headstock2 === "headstock_aviator"}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_aviator_back__neckPlastic__geo.geometry}
            material={nodes.headstock_aviator_back__neckPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_aviator_pegs__hardwareMetal__geo.geometry}
            material={nodes.headstock_aviator_pegs__hardwareMetal__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_aviator_trussRoadCover__blackPlastic__geo.geometry}
            material={nodes.headstock_aviator_trussRoadCover__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_aviator_trussRoadCoverTrim__whitePlastic__geo.geometry}
            material={nodes.headstock_aviator_trussRoadCoverTrim__whitePlastic__geo.material}
          />
        </group>
        <group visible={headstock2 === "headstock_briefcase"}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_briefcase_back__neckPlastic__geo.geometry}
            material={nodes.headstock_briefcase_back__neckPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_briefcase_front__blackPlastic__geo.geometry}
            material={nodes.headstock_briefcase_front__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_briefcase_pegs__hardwareMetal__geo.geometry}
            material={nodes.headstock_briefcase_pegs__hardwareMetal__geo.material}
          />
        </group>
        <group visible={headstock2 === "headstock_broadcaster"}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_broadcaster_back__neckPlastic__geo.geometry}
            material={nodes.headstock_broadcaster_back__neckPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_broadcaster_pegs__hardwareMetal__geo.geometry}
            material={nodes.headstock_broadcaster_pegs__hardwareMetal__geo.material}
          />
        </group>
        <group visible={headstock2 === "headstock_fallenangel"}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_fallenangel_back__neckPlastic__geo.geometry}
            material={nodes.headstock_fallenangel_back__neckPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_fallenangel_detail__whitePlastic__geo.geometry}
            material={nodes.headstock_fallenangel_detail__whitePlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_fallenangel_pegs__hardwareMetal__geo.geometry}
            material={nodes.headstock_fallenangel_pegs__hardwareMetal__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_fallenangel_trussRoadCover__blackPlastic__geo.geometry}
            material={nodes.headstock_fallenangel_trussRoadCover__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_fallenangel_trussRoadCoverTrim__whitePlastic__geo.geometry}
            material={nodes.headstock_fallenangel_trussRoadCoverTrim__whitePlastic__geo.material}
          />
        </group>
        <group visible={headstock2 === "headstock_headless"}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_headless_back__neckPlastic__geo.geometry}
            material={nodes.headstock_headless_back__neckPlastic__geo.material}
          />
        </group>
        <group visible={headstock2 === "headstock_ninjastar"}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_ninjastar_back__neckPlastic__geo.geometry}
            material={nodes.headstock_ninjastar_back__neckPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_ninjastar_front__blackPlastic__geo.geometry}
            material={nodes.headstock_ninjastar_front__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_ninjastar_pegs__hardwareMetal__geo.geometry}
            material={nodes.headstock_ninjastar_pegs__hardwareMetal__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_ninjastar_trussRoadCover__blackPlastic__geo.geometry}
            material={nodes.headstock_ninjastar_trussRoadCover__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_ninjastar_trussRoadCoverTrim__whitePlastic__geo.geometry}
            material={nodes.headstock_ninjastar_trussRoadCoverTrim__whitePlastic__geo.material}
          />
        </group>
        <group visible={headstock2 === "headstock_oversized"}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_oversized_back__neckPlastic__geo.geometry}
            material={nodes.headstock_oversized_back__neckPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_oversized_pegs__hardwareMetal__geo.geometry}
            material={nodes.headstock_oversized_pegs__hardwareMetal__geo.material}
          />
        </group>
        <group visible={headstock2 === "headstock_plankspanker"}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_plankspanker_back__neckPlastic__geo.geometry}
            material={nodes.headstock_plankspanker_back__neckPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_plankspanker_detail__whitePlastic__geo.geometry}
            material={nodes.headstock_plankspanker_detail__whitePlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_plankspanker_front__blackPlastic__geo.geometry}
            material={nodes.headstock_plankspanker_front__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_plankspanker_pegs__hardwareMetal__geo.geometry}
            material={nodes.headstock_plankspanker_pegs__hardwareMetal__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_plankspanker_trussRoadCover__blackPlastic__geo.geometry}
            material={nodes.headstock_plankspanker_trussRoadCover__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_plankspanker_trussRoadCoverTrim__whitePlastic__geo.geometry}
            material={nodes.headstock_plankspanker_trussRoadCoverTrim__whitePlastic__geo.material}
          />
        </group>
        <group visible={headstock2 === "headstock_reliable"}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_reliable_back__neckPlastic__geo.geometry}
            material={nodes.headstock_reliable_back__neckPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_reliable_front__blackPlastic__geo.geometry}
            material={nodes.headstock_reliable_front__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_reliable_pegs__hardwareMetal__geo.geometry}
            material={nodes.headstock_reliable_pegs__hardwareMetal__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_reliable_trussRoadCover__blackPlastic__geo.geometry}
            material={nodes.headstock_reliable_trussRoadCover__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_reliable_trussRoadCoverTrim__whitePlastic__geo.geometry}
            material={nodes.headstock_reliable_trussRoadCoverTrim__whitePlastic__geo.material}
          />
        </group>
        <group visible={headstock2 === "headstock_reliable12"}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_reliable12_back__neckPlastic__geo.geometry}
            material={nodes.headstock_reliable12_back__neckPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_reliable12_front__blackPlastic__geo.geometry}
            material={nodes.headstock_reliable12_front__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_reliable12_pegs__hardwareMetal__geo.geometry}
            material={nodes.headstock_reliable12_pegs__hardwareMetal__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_reliable12_trussRoadCover__blackPlastic__geo.geometry}
            material={nodes.headstock_reliable12_trussRoadCover__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_reliable12_trussRoadCoverTrim__whitePlastic__geo.geometry}
            material={nodes.headstock_reliable12_trussRoadCoverTrim__whitePlastic__geo.material}
          />
        </group>
        <group visible={headstock2 === "headstock_summit"}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_summit_back__neckPlastic__geo.geometry}
            material={nodes.headstock_summit_back__neckPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_summit_front__blackPlastic__geo.geometry}
            material={nodes.headstock_summit_front__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_summit_pegs__hardwareMetal__geo.geometry}
            material={nodes.headstock_summit_pegs__hardwareMetal__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_summit_trussRoadCover__blackPlastic__geo.geometry}
            material={nodes.headstock_summit_trussRoadCover__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_summit_trussRoadCoverTrim__whitePlastic__geo.geometry}
            material={nodes.headstock_summit_trussRoadCoverTrim__whitePlastic__geo.material}
          />
        </group>
        <group visible={headstock2 === "headstock_thunderbird"}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_thunderbird_back__neckPlastic__geo.geometry}
            material={nodes.headstock_thunderbird_back__neckPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_thunderbird_detail__whitePlastic__geo.geometry}
            material={nodes.headstock_thunderbird_detail__whitePlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_thunderbird_front__blackPlastic__geo.geometry}
            material={nodes.headstock_thunderbird_front__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_thunderbird_pegs__hardwareMetal__geo.geometry}
            material={nodes.headstock_thunderbird_pegs__hardwareMetal__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_thunderbird_trussRoadCover__blackPlastic__geo.geometry}
            material={nodes.headstock_thunderbird_trussRoadCover__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_thunderbird_trussRoadCoverTrim__whitePlastic__geo.geometry}
            material={nodes.headstock_thunderbird_trussRoadCoverTrim__whitePlastic__geo.material}
          />
        </group>
        <group visible={headstock2 === "headstock_viper"}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_viper_back__neckPlastic__geo.geometry}
            material={nodes.headstock_viper_back__neckPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_viper_detail__whitePlastic__geo.geometry}
            material={nodes.headstock_viper_detail__whitePlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_viper_front__blackPlastic__geo.geometry}
            material={nodes.headstock_viper_front__blackPlastic__geo.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.headstock_viper_pegs__hardwareMetal__geo.geometry}
            material={nodes.headstock_viper_pegs__hardwareMetal__geo.material}
          />
        </group>
        <mesh
        castShadow
        receiveShadow
        geometry={nodes.neck_back__neckPlastic__geo.geometry}
        material={nodes.neck_back__neckPlastic__geo.material}
        />
        <mesh
        castShadow
        receiveShadow
        geometry={nodes.neck_buttonA__neckButtonPlastic__geo.geometry}
        material={nodes.neck_buttonA__neckButtonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_buttonB__neckButtonPlastic__geo.geometry}
          material={nodes.neck_buttonB__neckButtonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_buttonC__neckButtonPlastic__geo.geometry}
          material={nodes.neck_buttonC__neckButtonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_buttonD__neckButtonPlastic__geo.geometry}
          material={nodes.neck_buttonD__neckButtonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_buttonE__neckButtonPlastic__geo.geometry}
          material={nodes.neck_buttonE__neckButtonPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_buttonTrim__translucentPlastic__geo.geometry}
          material={nodes.neck_buttonTrim__translucentPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_fretboard__fretBoardWood__geo.geometry}
          material={nodes.neck_fretboard__fretBoardWood__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_frets__brushedMetal__geo.geometry}
          material={nodes.neck_frets__brushedMetal__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_polybar__fretboardBindingPlastic__geo.geometry}
          material={m_fretboardBindingPlastic}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_riviet1__bluePlastic__geo.geometry}
          material={nodes.neck_riviet1__bluePlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_riviet2__redPlastic__geo.geometry}
          material={nodes.neck_riviet2__redPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_riviet3__yellowPlastic__geo.geometry}
          material={nodes.neck_riviet3__yellowPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_riviet4__bluePlastic__geo.geometry}
          material={nodes.neck_riviet4__bluePlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_riviet5__orangePlastic__geo.geometry}
          material={nodes.neck_riviet5__orangePlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.neck_riviets__blackPlastic__geo.geometry}
          material={nodes.neck_riviets__blackPlastic__geo.material}
        />
        <mesh
        castShadow
        receiveShadow
        geometry={nodes.inlay_bird__inlayPlastic__geo.geometry}
        material={nodes.inlay_bird__inlayPlastic__geo.material}
        visible={inlay2 === 'inlay_bird'}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.inlay_block__inlayPlastic__geo.geometry}
          material={nodes.inlay_block__inlayPlastic__geo.material}
          visible={inlay2 === 'inlay_block'}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.inlay_classicDot__inlayPlastic__geo.geometry}
          material={nodes.inlay_classicDot__inlayPlastic__geo.material}
          visible={inlay2 === 'inlay_classicDot'}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.inlay_deathbat__inlayPlastic__geo.geometry}
          material={nodes.inlay_deathbat__inlayPlastic__geo.material}
          visible={inlay2 === 'inlay_deathbat'}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.inlay_lightning__inlayPlastic__geo.geometry}
          material={nodes.inlay_lightning__inlayPlastic__geo.material}
          visible={inlay2 === 'inlay_lightning'}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.inlay_offsetDot__inlayPlastic__geo.geometry}
          material={nodes.inlay_offsetDot__inlayPlastic__geo.material}
          visible={inlay2 === 'inlay_offsetDot'}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.inlay_parallelogram__inlayPlastic__geo.geometry}
          material={nodes.inlay_parallelogram__inlayPlastic__geo.material}
          visible={inlay2 === 'inlay_parallelogram'}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.inlay_razor__inlayPlastic__geo.geometry}
          material={nodes.inlay_razor__inlayPlastic__geo.material}
          visible={inlay2 === 'inlay_razor'}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.inlay_sharkfin__inlayPlastic__geo.geometry}
          material={nodes.inlay_sharkfin__inlayPlastic__geo.material}
          visible={inlay2 === 'inlay_sharkfin'}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.inlay_snake__inlayPlastic__geo.geometry}
          material={nodes.inlay_snake__inlayPlastic__geo.material}
          visible={inlay2 === 'inlay_snake'}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.inlay_trapezoid__inlayPlastic__geo.geometry}
          material={nodes.inlay_trapezoid__inlayPlastic__geo.material}
          visible={inlay2 === 'inlay_trapezoid'}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.inlay_tree__inlayPlastic__geo.geometry}
          material={nodes.inlay_tree__inlayPlastic__geo.material}
          visible={inlay2 === 'inlay_tree'}
        />
      </group>
      <group position={[0, strummerOffset, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.strummer_base__blackPlastic__geo.geometry}
          material={nodes.strummer_base__blackPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.strummer_insertA__strummerPlastic__geo.geometry}
          material={nodes.strummer_insertA__strummerPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.strummer_insertB__strummerPlastic__geo.geometry}
          material={nodes.strummer_insertB__strummerPlastic__geo.material}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.strummer_main__translucentPlastic__geo.geometry}
          material={nodes.strummer_main__translucentPlastic__geo.material}
        />
      </group>
    </group>
  )
}

useGLTF.preload(`./assets/${asset_name}/model.glb`)